{
    "sourceFile": "app/Models/FileControl.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1753309063163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753309077798,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,8 @@\n         if (!$resultados || count($resultados) === 0) {\n             return false;\n         }\n \n-        // Extrae todas las rutas en un array\n         $rutas = array_map(function ($item) {\n             return $item->ruta;\n         }, $resultados);\n \n"
                }
            ],
            "date": 1753309063163,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Support\\Facades\\DB;\n\nclass FileControl extends Model\n{\n    use HasFactory;\n\n    public static function getPersonal()\n    {\n        $sucursal = 0;\n        return DB::select('EXEC SW_LISTAR_PERSONAL_X_SUCURSAL ?', [$sucursal]);\n    }\n\n    public static function getDocsXPersona($codPersonal = '1')\n    {\n        return DB::select('EXEC SW_LISTAR_FOLIOS_X_PERSONAL ?', [$codPersonal]);\n    }\n\n    public static function getClientes()\n    {\n        return DB::select('EXEC SW_LISTAR_CLIENTES');\n    }\n\n    public static function getClientesLegajos()\n    {\n        return DB::select('EXEC SW_LISTAR_CLIENTES_LEGAJOS');\n    }\n\n    public static function getCargosXCliente($cliente)\n    {\n        return DB::select('EXEC SW_LISTAR_CARGOS_X_CLIENTES_LEGAJOS ?', [$cliente]);\n    }\n\n    public static function getSucursales()\n    {\n        return DB::select('EXEC SW_LISTAR_SUCURSALES');\n    }\n\n    public static function getCargos()\n    {\n        return DB::select('EXEC SW_LISTAR_CARGOS');\n    }\n\n    public static function getLegajos($cliente, $cargo, $codPersonal)\n    {\n        return DB::select('EXEC SW_LISTAR_LEGAJOS_X_PERSONA ?, ?, ?', [$cliente, $cargo, $codPersonal]);\n    }\n\n    public static function getFolios()\n    {\n        return DB::select('EXEC SW_LISTAR_FOLIOS');\n    }\n\n    public static function getAllFolios()\n    {\n        return DB::select('EXEC SW_LISTAR_FOLIOS');\n    }\n\n    /*public static function saveCargo(Request $request){\n        DB::table('sw_cargos')->insert([\n            'descripcion' => $request->nombre,\n            'creado_por' => 'SOPORTE_SW',\n            'fecha_creacion' => now(),\n        ]);\n\n        return response()->json(['mensaje' => 'Producto agregado con éxito'], 201);\n    }*/\n\n    public static function saveSolicitud($codigo, $tiene, $cargo, $cliente, $creado_por){\n        return DB::statement('EXEC SW_SAVE_SOLICITUD ?, ?, ?, ?, ?', [$codigo, $cliente, $cargo, $tiene, $creado_por]);\n    }\n\n    public static function getPeriodos()\n    {\n        return DB::select('EXEC SW_LISTAR_PERIODOS');\n    }\n\n    public static function getCoincidencias($cliente, $cargo)\n    {\n        return DB::select('EXEC SW_LISTAR_COINCIDENCIAS_LEGAJOS ?, ?', [$cliente, $cargo]);\n    }\n    public static function getFoliosClienteCargo($cliente, $cargo)\n    {\n        return DB::select('EXEC SW_LISTAR_LEGAJOS_X_CLIENTE_X_CARGO ?, ?', [$cliente, $cargo]);\n    }\n\n    //GUARDAR DATOS DE LOS FOLIOS\n    public static function saveFolioPersonal($fecha_emision, $fecha_caducidad, $codFolio, $codPersonal/*, $filePath*/)\n    {\n        // Insertar directamente en la tabla 'folios' usando el Query Builder\n        $inserted = DB::table('sw_folios_detalles')->insert([\n            'fecha_emision' => $fecha_emision,\n            'fecha_caducidad' => $fecha_caducidad,\n            'codFolio' => $codFolio,\n            'codPersonal' => $codPersonal,\n            //'ruta_archivo' => $filePath\n        ]);\n\n        return $inserted;\n    }\n    public static function saveFolio($nombre, $tipo, $obligatorio, $vencimiento, $tipo_fecha, $plataforma)\n    {\n        // Insertar directamente en la tabla 'folios' usando el Query Builder\n        $inserted = DB::table('sw_folios')->insert([\n            'nombre' => $nombre,\n            'tipo' => $tipo,\n            'obligatorio' => $obligatorio,\n            'vencimiento' => $vencimiento,\n            'tipo_fecha' => $tipo_fecha,\n            'plataforma' => $plataforma,\n        ]);\n\n        return $inserted;\n    }\n    public static function updateFolio($codigo, $nombre, $tipo, $obligatorio, $vencimiento, $tipo_fecha, $plataforma)\n    {\n        // Insertar directamente en la tabla 'folios' usando el Query Builder\n        $updated = DB::table('sw_folios')\n            ->where('codigo', $codigo)\n            ->update([\n                'nombre' => $nombre,\n                'tipo' => $tipo,\n                'obligatorio' => $obligatorio,\n                'vencimiento' => $vencimiento,\n                'tipo_fecha' => $tipo_fecha,\n                'plataforma' => $plataforma,\n                'fecha_modificacion' => DB::raw('GETDATE()'),\n            ]);\n\n        return $updated;\n    }\n    public static function disabledFolio($codigo)\n    {\n        return DB::table('sw_folios')\n            ->where('codigo', $codigo)\n            ->update([\n                'habilitado' => 0,\n                'fecha_modificacion' => DB::raw('GETDATE()'),\n            ]);\n    }\n    public static function saveCargo($descripcion, $nombre, $abreviatura, $cod_servicio, $cod_subservicio, $cod_tipo, $cod_area, $usuario){\n        $inserted = DB::table('sw_cargos')->insert([\n            'descripcion' => $descripcion,\n            'nombre' => $nombre,\n            'abreviatura' => $abreviatura,\n            'cod_servicio' => $cod_servicio,\n            'cod_subservicio' => $cod_subservicio,\n            'cod_tipo' => $cod_tipo,\n            'cod_area' => $cod_area,\n            'creado_por' => $usuario\n        ]);\n        return $inserted;\n    }\n\n    // public static function validarLegajo($folio, $codCliente, $codCargo, $codLegajo){\n    //     return DB::select('SELECT TOP 1 * FROM sw_legajos_detalles WHERE codFolio = ? AND codCliente = ? AND codCargo = ? AND habilitado = 1 AND codLegajo = ?', [$folio, $codCliente, $codCargo, $codLegajo]);\n    // }\n\n    public static function validarLegajo($folio, $codCliente, $codCargo, $codLegajo = null) {\n        return DB::table('sw_legajos_detalles')\n            ->where('codFolio', $folio)\n            ->where('codCliente', $codCliente)\n            ->where('codCargo', $codCargo)\n            ->where('codLegajo', $codLegajo)\n            //->where('habilitado', 1)\n            ->first(); // Esto ya hace TOP 1 en SQL Server\n    }\n\n\n    public static function QuitarTodosLegajos($codLegajo, $usuario)\n    {\n        // 1. Obtener los codFolio de los registros que serán actualizados\n        $folios = DB::table('sw_legajos_detalles')\n            ->where('codLegajo', $codLegajo)\n            ->where('habilitado', 1) // solo los habilitados, si aplica\n            ->pluck('codFolio')\n            ->toArray(); // opcional, para tener un array plano\n\n        // 2. Si no hay folios, evitar actualizar\n        if (empty($folios)) {\n            return [];\n        }\n\n        // 3. Ejecutar la actualización\n        DB::table('sw_legajos_detalles')\n            ->where('codLegajo', $codLegajo)\n            ->whereIn('codFolio', $folios)\n            ->update([\n                'habilitado' => 0,\n                //'modificado_por' => $usuario,\n                'fecha_modificacion' => DB::raw('GETDATE()')\n            ]);\n\n        // 4. Retornar los folios que fueron afectados\n        return $folios;\n    }\n\n    // public static function saveLegajoMain($nombre){\n    //     return DB::select('EXEC SW_INSERTAR_LEGAJO_MAIN ?', [$nombre]);\n    // }\n\n    public static function saveLegajoMain($nombre){\n        if(empty(trim($nombre))) {\n            throw new \\InvalidArgumentException('El nombre no puede estar vacío.');\n        }\n        return DB::table('sw_legajos')->insertGetId([\n            'descripcion' => $nombre,\n            'habilitado' => 1,\n            'creado_por' => session('usuario'),\n            'fecha_creacion' => DB::raw('GETDATE()'),\n        ]);\n    }\n\n\n\n\n    // public static function saveLegajo($folio, $codCliente, $codCargo, $codLegajo){\n    //     return DB::select('EXEC SW_INSERTAR_LEGAJO_DETALLE ?, ?, ?, ?', [$codCliente, $codCargo, $codLegajo, $folio]);\n    // }\n\n    public static function saveLegajo($folio, $codCliente, $codCargo, $codLegajo, $usuario){\n        return DB::table('sw_legajos_detalles')->insert([\n            'codCliente' => $codCliente,\n            'codCargo'   => $codCargo,\n            'codLegajo'  => $codLegajo,\n            'codFolio'   => $folio,\n            'habilitado' => 1,\n            'creado_por' => $usuario,\n            'fecha_creacion' => DB::raw('GETDATE()')\n        ]);\n    }\n\n    public static function updateLegajo($folio, $codCliente, $codCargo, $codLegajo, $usuario){\n       return DB::table('sw_legajos_detalles')\n        ->where('codCliente', $codCliente)\n        ->where('codCargo', $codCargo)\n        ->where('codLegajo', $codLegajo)\n        ->where('codFolio', $folio)\n        ->update([\n            'habilitado' => 1,\n            'modificado_por' => $usuario,\n            'fecha_modificacion' => DB::raw('GETDATE()')\n        ]);\n    }\n\n    public static function actualizarNotificacion($folio, $codCliente, $codCargo){\n        return DB::table('sw_solicitud_cargo_comercial')\n            ->where('codCliente', $codCliente)\n            ->where('codCargo', $codCargo)\n            ->where('codFolio', $folio)\n            ->where('habilitado', 1)\n            ->where('tipoSolicitar', 0)\n            //->where('fecha_creacion', '>=', DB::raw('DATEADD(HOUR, -24, GETDATE())'))\n            ->update([\n                'listo' => 1,\n                'fecha_modificacion' => DB::raw('GETDATE()')\n            ]);\n    }\n\n    public static function actualizarNotificacionDes($folio, $codCliente, $codCargo){\n        $existe = DB::table('sw_solicitud_cargo_comercial')\n            ->where('codCliente', $codCliente)\n            ->where('codCargo', $codCargo)\n            ->where('codFolio', $folio)\n            ->where('habilitado', 1)\n            ->where('tipoSolicitar', 1)\n            ->where('fecha_creacion', '>=', DB::raw('DATEADD(HOUR, -24, GETDATE())'))\n            ->exists();\n\n        if (!$existe) {\n            return false;\n        }\n\n        return DB::table('sw_solicitud_cargo_comercial')\n            ->where('codCliente', $codCliente)\n            ->where('codCargo', $codCargo)\n            ->where('codFolio', $folio)\n            ->where('habilitado', 1)\n            ->where('tipoSolicitar', 1)\n            ->where('fecha_creacion', '>=', DB::raw('DATEADD(HOUR, -24, GETDATE())'))\n            ->update([\n                'listo' => 1,\n                'fecha_modificacion' => DB::raw('GETDATE()')\n            ]);\n    }\n\n\n    public static function listarNotificaciones(){\n        return DB::select('EXEC SW_LISTAR_NOTIFICACIONES');\n    }\n\n    public static function getFoliosXLegajo($codCliente, $codCargo){\n        return DB::select('EXEC SW_LISTAR_FOLIOS_X_LEGAJO ?, ?' , [$codCliente, $codCargo]);\n    }\n\n    public static function getAreas(){\n        return DB::select('EXEC SW_LISTAR_AREAS ');\n    }\n\n    public static function getPosicion(){\n        return DB::select('EXEC SW_LISTAR_POSICION ');\n    }\n\n    public static function getGrupo(){\n        return DB::select('EXEC SW_LISTAR_GRUPO ');\n    }\n\n    public static function getGrupoId($codigo){\n        return DB::select('EXEC SW_LISTAR_GRUPO_ID ? ', [$codigo]);\n    }\n\n    public static function insertarCargo($data){\n        return DB::statement('EXEC SW_INSERTAR_CARGO ?, ?, ?, ?, ?, ?, ?, ?', $data);\n    }\n\n    public static function activarCargo($codigo, $data){\n        return DB::statement('EXEC SW_ACTIVAR_CARGO ?, ?', [$codigo, $data]);\n    }\n\n    public static function updateCargo($data){\n        return DB::statement('EXEC SW_UPDATE_CARGO ?, ?, ?, ?, ?, ?, ?, ?, ?', $data);\n    }\n\n    public static function getCargosXCodigo($codigo){\n        return DB::select('EXEC SW_LISTAR_CARGOS_X_CODIGO ?', [$codigo]);\n    }\n\n    public static function getRutaFolio($codFolio){\n        $resultados = DB::select('EXEC SW_RUTA_ARCHIVO_FOLIO ?', [$codFolio]);\n\n        if (!$resultados || count($resultados) === 0) {\n            return false;\n        }\n\n        // Extrae todas las rutas en un array\n        $rutas = array_map(function ($item) {\n            return $item->ruta;\n        }, $resultados);\n\n        return $rutas;\n    }\n\n    public static function getViewPerDocs($codPersonal, $codFolio){\n        $resultado = DB::select('EXEC SW_DOCS_PER_VIEW ?, ?', [$codPersonal, $codFolio]);\n        return $resultado;\n    }\n\n\n\n    //BUSQUEDA DE LEGAJOS\n    public static function getPersonalLegajos(){\n        return DB::select('EXEC SW_LISTAR_COINCIDENCIAS_LEGAJOS_GENERAL');\n    }\n\n    /* ====================== PARA EL GENERADOR DE PDF ======================= */\n    public static function getFoliosInfoPersona($codPersona, $codFolio){\n        return DB::select('EXEC SW_LISTAR_DATOS_FOLIO_X_PERSONA ?, ?', [$codPersona, $codFolio]);\n    }\n\n    public static function listarPermisos($codigo){\n        return DB::statement('EXEC SW_LISTAR_PERMISOS ?', [$codigo]);\n    }\n\n    public static function getFoliosXLegajo_comercial($codCliente, $codCargo){\n        return DB::select('EXEC SW_LISTAR_FOLIOS_COMERCIAL ?, ?' , [$codCargo, $codCliente]);\n    }\n\n    public static function getSucursalXPersona($codPersona){\n        $resultado = DB::select('EXEC SW_SUCURSAL_X_PERSONA ?', [$codPersona]);\n        return $resultado ? $resultado[0]->sucursal : null;\n    }\n\n    public static function getReporteFiltro($codigo){\n        return DB::select('EXEC SW_SISOLMAR_REPORTES ?', [$codigo]);\n    }\n}\n"
        }
    ]
}