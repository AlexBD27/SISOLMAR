{
    "sourceFile": "app/Http/Controllers/LoginController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1753892424395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1753892424395,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Facades\\Session;\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse App\\Models\\User;\nuse App\\Models\\FileControl;\nuse Illuminate\\Support\\Facades\\DB;\n\nclass LoginController extends Controller\n{\n    public function index()\n    {\n        return view('login');\n    }\n\n    public function create_user()\n    {\n        $data_user = [\n            'usuario' => 'MPAREDES',\n            'clave' => Hash::make('40973655'),\n            'nombre_1' => 'MILAGRITOS',\n            'apellido_1' => 'PAREDES',\n            'apellido_2' => 'LOPEZ'\n        ];\n\n        /*$user = new User();\n        $user->fill($data_user);\n        $user->save();*/\n\n        print_r($data_user);\n\n        echo \"Usuario creado\";\n    }\n\n    public function validar(Request $request){\n        $credentials = $request->only('username', 'password');\n        \n        $user = User::where('usuario', $credentials['username'])\n        ->where('habilitado', 1)\n        ->first();\n\n        // Verificar que el usuario exista y que la clave sea correcta\n        if ($user && Hash::check($credentials['password'], $user->clave)) {\n            Auth::login($user); // Iniciar sesión\n\n            $menus_per = DB::table('sw_submenus')\n            ->join('sw_roles_permisos', 'sw_submenus.codigo', '=', 'sw_roles_permisos.codSubmenu')\n            ->where('sw_roles_permisos.codRol', $user->tipo_rol)\n            ->select('sw_submenus.*')\n            ->orderBy('sw_submenus.orden', 'asc')   \n            ->get();\n\n            session()->put('nombre', $user->nombre_1);\n            session()->put('apellido', $user->apellido_1);\n            session()->put('usuario', $user->usuario);\n            session()->put('tipo_rol', $user->tipo_rol);\n            session()->put('menu', $menus_per);\n\n            return redirect()->intended('/home');\n        }\n\n        return redirect()->route('login')->withErrors(['error' => 'Credenciales inválidas']);\n    }\n\n    // public function validar(Request $request){\n    //     $credentials = $request->only('username', 'password');\n\n    //     /* ESTOS CAMBIOS SOLO FUERON POR LOS PRBLEMAS DE CONEXION A LA BS - NO APLICA */\n    //     $user_data = DB::select(\"EXEC SW_VALIDAR_USUARIO ?\", [$credentials['username']])[0];\n\n    //     // Verificar que el usuario exista y que la clave sea correcta\n    //     if ($user_data && Hash::check($credentials['password'], $user_data->clave)) {\n\n    //         if (!empty($user_data)) {\n    //             // Convierte el resultado en instancia del modelo Eloquent User\n    //             $user = new User((array) $user_data);\n    //             $user->exists = true; // Marca que el modelo ya existe en la BD\n    //             Auth::login($user); // Ya puedes iniciar sesión\n    //             // return redirect()->intended('dashboard'); // Redirige a donde desees\n\n    //             $menus_per = DB::select(\"EXEC SW_LISTAR_PERMISOS ?\", [$user_data->codigo]);\n\n    //             session()->put('nombre', $user_data->nombre_1);\n    //             session()->put('apellido', $user_data->apellido_1);\n    //             session()->put('usuario', $user_data->usuario);\n    //             session()->put('tipo_rol', $user_data->tipo_rol);\n    //             session()->put('menu', $menus_per);\n\n    //             return redirect()->intended('/home');\n    //         } else {\n    //             return back()->withErrors([\n    //                 'username' => 'Usuario no encontrado o deshabilitado.',\n    //             ]);\n    //         }\n    //     }\n\n    //     // Si la autenticación falla\n    //     return redirect()->route('login')->withErrors(['error' => 'Credenciales inválidas']);\n    // }\n\n    public function logout()\n    {\n        Auth::logout();\n        return redirect()->route('login');;\n    }\n}\n"
        }
    ]
}